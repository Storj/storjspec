// syntax guide: http://www.graphviz.org/pdf/dotguide.pdf
// compile png: `dot -Tpng status.dot -o status.png`
// compile pdf: `dot -Tpdf status.dot -o status.pdf`


digraph G {
    node [shape="box", style="filled", color="black", fillcolor="white"];

    // LEGEND
    subgraph cluster_0 {
        label = "Status legend";

        "Complete" [fillcolor=green, shape=ellipse];
        "Working API" [fillcolor=yellow, shape=ellipse];
        "Partial" [fillcolor=orange, shape=ellipse];

        "Full spec" [shape=ellipse];
        "Partial spec" [shape=hexagon];
        "Undefined spec" [shape=box];
    };
    "Complete" -> "Working API" -> "Partial";
    "Full spec" -> "Partial spec" -> "Undefined spec";


    // STORJNET
    subgraph cluster_1 {
        label = "Storjnet";
        style=filled;
        color=lightblue;

        "DHT (Kademlia)" [fillcolor=green, shape=ellipse];
        "Topic Pub/Sub (Quasar)" [fillcolor=green, shape=ellipse]; // enable publishing and subscribing to events
        "Data streams" [fillcolor=green, shape=ellipse]; // full duplex data transfer
        "File transfer";
        "Content Pub/Sub" [shape=box]; // enable publishing and subscribing to events
        "Messaging" [fillcolor=green, shape=ellipse]; // to shortcut the pubsub after peer found
        "RPC" [fillcolor=yellow, shape=ellipse]; // rpc calls and data transfer between clients
        "Secure transport";
        "Bandwidth limiter";
        "UPnP/NAT-PMP";
    };
    "UPnP/NAT-PMP" -> "Secure transport";
    "File transfer" -> "Data streams";
    "DHT (Kademlia)" -> "RPC";
    "Topic Pub/Sub (Quasar)" -> "RPC";
    "Messaging" -> "RPC";
    "Data streams" -> "RPC";
    "RPC" -> "Secure transport";
    "Bandwidth limiter" -> "Secure transport";

    // STORJLIB
    subgraph cluster_2 {
        label = "Storjlib";
        style=filled;
        color=lightgoldenrod;

        "Contract" [fillcolor=green, shape=ellipse];
        "AuditDaemon" [shape=ellipse];
        "PaymentDaemon" [shape=ellipse];
        "TelemetryDaemon" [shape=ellipse];
        "ContractManager";
        "Audit" [fillcolor=green, shape=ellipse];
        "Store" [fillcolor=yellow, shape=hexagon];
        "Heartbeat" [fillcolor=green, shape=ellipse];
        "Wallet" [fillcolor=orange, shape=box];
    };
    "PaymentDaemon" -> "ContractManager";
    "PaymentDaemon" -> "Contract";
    "PaymentDaemon" -> "Wallet";
    "AuditDaemon" -> "ContractManager";
    "AuditDaemon" -> "Contract";
    "AuditDaemon" -> "Audit";
    "ContractManager" -> "Contract";
    "Content Pub/Sub" -> "Topic Pub/Sub (Quasar)";
    "Audit" -> "Contract"; // when/how to perform the audit
    "Audit" -> "Store"; // perform audit challange
    "Audit" -> "Ledger (SIP 001)" [style=dotted]; // save result in ledger
    "Heartbeat" -> "Contract";
    "Heartbeat" -> "Store"; // perform heartbeat challange
    "Heartbeat" -> "Ledger (SIP 001)" [style=dotted]; // save result in ledger
    "Store" -> "File transfer";
    "Store" -> "Graylist (SIP 004)" [style=dotted];
    "Graylist (SIP 004)" -> "CHISQRDTEST (SIP 003)" [style=dotted];
    "CHISQRDTEST (SIP 003)" -> "File transfer" [style=dotted];
    "CHISQRDTEST (SIP 003)" -> "REST (SIP 002)" [style=dotted];
    "TelemetryDaemon" -> "Metadisk";
    "TelemetryDaemon" -> "Store";

    // SIP
    subgraph cluster_3 {
        label = "SIP Proposals";
        style=filled;
        color=wheat;

        "REST (SIP 002)"; // put/get shards
        "Ledger (SIP 001)";
        "Graylist (SIP 004)";
        "CHISQRDTEST (SIP 003)";
    };

    // EXTERNAL
    "Metadisk" [fillcolor=yellow, shape=ellipse];
}
